name: CI/CD Pipeline

on :               #trigger
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: typing-personality     # doc.img
  REGISTRY: docker.io         # dochub

jobs:
  qa:
    runs-on: ubuntu-latest      #temporary ubuntu comp cloud
    steps:
    - name: Checkout code
      uses: actions/checkout@v4       #git clone

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.3'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with: 
        path: ~/.cache/pip       
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: | 
          ${{ runner.os }}-pip-

      
    - name: Install dependencies
      run: |                                 #multiline literal indicstor
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8               #pyhton code linter
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics     
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pip install pytest 
        pytest -v 

    - name: Generate test summary
      if: always()
      run: |
        echo " Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Linting: Passed" >> $GITHUB_STEP_SUMMARY
        echo "- Unit Tests: Completed" >> $GITHUB_STEP_SUMMARY


  release:
    needs: qa
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker hub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}


    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Generate release summary
      run: |
        echo "## Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Image Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** Docker Hub" >> $GITHUB_STEP_SUMMARY
        echo "**Pull Command:**" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
  


    
    


      


